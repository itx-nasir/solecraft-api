
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: solecraft_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-solecraft_db}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - solecraft_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: solecraft_api
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      DATABASE_URL_SYNC: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      
      # JWT
      JWT_SECRET_KEY: your-super-secret-jwt-key-change-this-in-production
      JWT_ALGORITHM: HS256
      JWT_EXPIRE_MINUTES: 30
      
      # App Settings
      APP_NAME: SoleCraft API
      APP_VERSION: 1.0.0
      DEBUG: "true"
      ENVIRONMENT: development
      
      # Email
      SENDGRID_API_KEY: your-sendgrid-api-key
      EMAIL_FROM: noreply@solecraft.com
      ADMIN_EMAIL: admin@solecraft.com
      
      # CORS
      ALLOWED_ORIGINS: '["http://localhost:3000", "http://localhost:8080"]'
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - solecraft_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  solecraft_network:
    driver: bridge 